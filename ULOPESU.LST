     1                                  ; Trabalho de Sistemas Embarcados I
     2                                  ; Usiel Ferreira Lopes Junior
     3                                  ; 2022/1
     4                                  ; Turma: 06.1
     5                                  
     6                                  segment code
     7                                  ..start:
     8 00000000 B8[0000]                    mov 	ax,data
     9 00000003 8ED8                        mov 	ds,ax
    10 00000005 B8[0000]                    mov 	ax,stack
    11 00000008 8ED0                        mov 	ss,ax
    12 0000000A BC[0001]                    mov 	sp,stacktop
    13                                  
    14                                  	; salvar modo atual de video
    15 0000000D B40F                    	mov  		ah,0Fh
    16 0000000F CD10                    	int  		10h
    17 00000011 A2[FC01]                	mov  		[modo_anterior],al   
    18                                  
    19                                  	; alterar modo de video para gráfico 640x480 16 cores
    20 00000014 B012                    	mov     	al,12h
    21 00000016 B400                    	mov     	ah,0
    22 00000018 CD10                    	int     	10h
    23                                  	; preparando relogio
    24 0000001A 31C0                    	XOR 	AX, AX
    25 0000001C 8EC0                        MOV 	ES, AX
    26 0000001E 26A12000                    MOV     AX, [ES:intr*4];carregou AX com offset anterior
    27 00000022 A3[FE01]                    MOV     [offset_dos], AX        ; offset_dos guarda o end. para qual ip de int 9 estava apontando anteriormente
    28 00000025 26A12200                    MOV     AX, [ES:intr*4+2]     ; cs_dos guarda o end. anterior de CS
    29 00000029 A3[0002]                    MOV     [cs_dos], AX
    30 0000002C FA                          CLI     
    31 0000002D 268C0E2200                  MOV     [ES:intr*4+2], CS
    32 00000032 26C7062000[D801]            MOV     WORD [ES:intr*4],relogio
    33 00000039 FB                          STI
    34 0000003A E83102                  	call 	textos_fixos
    35                                  
    36                                  l1:
    37 0000003D E84100                  	call  	ajustar_horas
    38 00000040 803E[0202]00            	cmp 	byte [tique], 0
    39 00000045 7503                    	jne 	ler_teclado
    40 00000047 E8DC01                  	call 	converte
    41                                  
    42                                  ler_teclado:
    43 0000004A B40B                    	mov 	ah,0bh		
    44 0000004C CD21                        int 	21h			; Le buffer de teclado
    45 0000004E 3C00                        cmp 	al,0
    46 00000050 74EB                    	je		l1			; nenhuma telha -> loop principal
    47 00000052 B408                    	mov 	ah, 08
    48 00000054 CD21                    	int 	21h
    49 00000056 3C78                    	cmp		al, 'x'		; tecla x -> finaliza o programa
    50 00000058 743D                    	je      fim
    51 0000005A 3C73                    	cmp		al, 's'		; tecla s -> configura os segundos
    52 0000005C 7458                    	je      config_seg
    53 0000005E 3C6D                    	cmp		al, 'm'		; tecla m -> configura os minutos
    54 00000060 7463                    	je      config_min
    55 00000062 3C68                    	cmp		al, 'h'		; tecla h -> configura as horas
    56 00000064 746E                    	je      config_hrs
    57 00000066 E9D4FF                  	jmp 	l1			; outras teclas -> loop principal
    58                                  
    59                                  limpa_seg:
    60 00000069 C606[0302]00            	mov byte [segundo], 0
    61 0000006E E91000                  	jmp ajustar_horas
    62                                  
    63                                  limpa_min:
    64 00000071 C606[0402]00            	mov byte [minuto], 0
    65 00000076 E90800                  	jmp ajustar_horas
    66                                  
    67                                  limpa_hrs:
    68 00000079 C606[0502]00            	mov byte [hora], 0
    69 0000007E E90000                  	jmp ajustar_horas
    70                                  
    71                                  ajustar_horas:
    72 00000081 803E[0302]3C            	cmp byte [segundo], 60
    73 00000086 7DE1                    	jnl	limpa_seg
    74 00000088 803E[0402]3C            	cmp byte [minuto], 60
    75 0000008D 7DE2                    	jnl	limpa_min
    76 0000008F 803E[0502]18            	cmp byte [hora], 24
    77 00000094 7DE3                    	jnl	limpa_hrs
    78 00000096 C3                      	ret
    79                                  
    80                                  fim:
    81 00000097 B400                    	mov  	AH, 0   					; set video mode
    82 00000099 A0[FC01]                	mov  	AL, [modo_anterior]   		; modo anterior
    83 0000009C CD10                    	int  	10h
    84 0000009E FA                      	CLI
    85 0000009F 31C0                        XOR     AX, AX
    86 000000A1 8EC0                        MOV     ES, AX
    87 000000A3 A1[0002]                    MOV     AX, [cs_dos]
    88 000000A6 26A32200                    MOV     [ES:intr*4+2], AX
    89 000000AA A1[FE01]                    MOV     AX, [offset_dos]
    90 000000AD 26A32000                    MOV     [ES:intr*4], AX
    91 000000B1 B8004C                  	mov     AX, 4C00H
    92 000000B4 CD21                    	int     21h
    93                                  
    94                                  config_seg:
    95 000000B6 E8CB00                  	call 	desenha_select_seg
    96 000000B9 E82700                  	call 	ler_nums
    97 000000BC E89F00                  	call 	w_seg
    98 000000BF E8A500                  	call 	apaga_select
    99 000000C2 E978FF                  	jmp 	l1
   100                                  
   101                                  config_min:
   102 000000C5 E8D800                  	call 	desenha_select_min
   103 000000C8 E81800                  	call 	ler_nums
   104 000000CB E88900                  	call 	w_min
   105 000000CE E89600                  	call 	apaga_select
   106 000000D1 E969FF                  	jmp 	l1
   107                                  
   108                                  config_hrs:
   109 000000D4 E8E500                  	call	desenha_select_hrs
   110 000000D7 E80900                  	call 	ler_nums
   111 000000DA E87300                  	call 	w_hora
   112 000000DD E88700                  	call 	apaga_select
   113 000000E0 E95AFF                  	jmp 	l1
   114                                  
   115                                  ler_nums:		; 	Lê dois números
   116 000000E3 31C9                    	xor cx, cx
   117                                  	loop_ler_nums
   118 000000E5 B40B                    		mov 	ah,0bh		
   119 000000E7 CD21                    		int 	21h			; Le buffer de teclado
   120 000000E9 3C00                    		cmp 	al, 0
   121 000000EB 74F8                    		je		loop_ler_nums			; nenhuma telha -> loop principal
   122 000000ED E82400                  		call 	verificar_tecla
   123 000000F0 81F90200                		cmp cx, 2
   124 000000F4 75EF                    		jne loop_ler_nums
   125 000000F6 C3                      	ret
   126                                  
   127                                  w_n1:
   128 000000F7 8816[0100]              	mov byte[n1], dl
   129 000000FB C3                      	ret
   130                                  
   131                                  w_n2:
   132 000000FC 8816[0200]              	mov byte[n2], dl
   133 00000100 C3                      	ret
   134                                  
   135                                  ler_num:
   136 00000101 41                      	inc cx
   137 00000102 88C2                    	mov dl, al
   138 00000104 80EA30                  	sub dl, 30h
   139 00000107 81F90100                	cmp cx, 1
   140 0000010B 74EA                    	je 	w_n1
   141 0000010D 81F90200                	cmp cx, 2
   142 00000111 74E9                    	je 	w_n2
   143 00000113 C3                      	ret
   144                                  
   145                                  verificar_tecla:
   146 00000114 B408                    	mov 	ah, 08
   147 00000116 CD21                    	int 	21h
   148 00000118 3C30                    	cmp		al, '0'
   149 0000011A 74E5                    	je		ler_num
   150 0000011C 3C31                    	cmp		al, '1'
   151 0000011E 74E1                    	je		ler_num
   152 00000120 3C32                    	cmp		al, '2'
   153 00000122 74DD                    	je		ler_num
   154 00000124 3C33                    	cmp		al, '3'
   155 00000126 74D9                    	je		ler_num
   156 00000128 3C34                    	cmp		al, '4'
   157 0000012A 74D5                    	je		ler_num
   158 0000012C 3C35                    	cmp		al, '5'
   159 0000012E 74D1                    	je		ler_num
   160 00000130 3C36                    	cmp		al, '6'
   161 00000132 74CD                    	je		ler_num
   162 00000134 3C37                    	cmp		al, '7'
   163 00000136 74C9                    	je		ler_num
   164 00000138 3C38                    	cmp		al, '8'
   165 0000013A 74C5                    	je		ler_num
   166 0000013C 3C39                    	cmp		al, '9'
   167 0000013E 74C1                    	je		ler_num
   168 00000140 C3                      	ret
   169                                  
   170                                  pega_num:
   171 00000141 31C0                    	xor ax, ax
   172 00000143 A0[0100]                	mov al, byte[n1]
   173 00000146 B90A00                  	mov cx, 10
   174 00000149 F7E1                    	mul cx
   175 0000014B 0206[0200]              	add al, byte[n2]
   176 0000014F C3                      	ret
   177                                  
   178                                  w_hora:
   179 00000150 E8EEFF                  	call 	pega_num
   180 00000153 A2[0502]                	mov 	byte[hora], al
   181 00000156 C3                      	ret
   182                                  
   183                                  w_min:
   184 00000157 E8E7FF                  	call 	pega_num
   185 0000015A A2[0402]                	mov 	byte[minuto], al
   186 0000015D C3                      	ret
   187                                  
   188                                  w_seg:
   189 0000015E E8E0FF                  	call 	pega_num
   190 00000161 FEC8                    	dec 	al
   191 00000163 A2[0302]                	mov 	byte[segundo], al
   192 00000166 C3                      	ret
   193                                  
   194                                  apaga_select:
   195 00000167 B90800                  	mov     	cx, 8					;numero de caracteres
   196 0000016A BB0000                  	mov     	bx, 0
   197 0000016D B60F                    	mov     	dh, 15					;linha 0-29
   198 0000016F B227                    	mov     	dl, 39					;coluna 0-79
   199 00000171 C606[FB01]00            	mov			byte[cor], preto
   200                                  	loop_apaga_select:
   201 00000176 E85702                  		call	cursor
   202 00000179 B020                    		mov     al, ' '
   203 0000017B E86902                  		call	caracter
   204 0000017E 43                      		inc     bx			;proximo caracter
   205 0000017F FEC2                    		inc		dl			;avanca a coluna
   206 00000181 E2F3                    		loop    loop_apaga_select
   207 00000183 C3                      	ret
   208                                  
   209                                  desenha_select_seg:
   210 00000184 B60F                    	mov     dh, 15						;linha 0-29
   211 00000186 B22E                    	mov     dl, 46						;coluna 0-79
   212 00000188 C606[FB01]0A            	mov		byte[cor], verde_claro
   213 0000018D E84002                  	call	cursor
   214 00000190 B023                    	mov     al, 35
   215 00000192 E85202                  	call	caracter
   216 00000195 B22D                    	mov     dl, 45						;coluna 0-79
   217 00000197 E83602                  	call	cursor
   218 0000019A B023                    	mov     al, 35
   219 0000019C E84802                  	call	caracter
   220 0000019F C3                      	ret
   221                                  
   222                                  desenha_select_min:
   223 000001A0 B60F                    	mov     dh, 15						;linha 0-29
   224 000001A2 B22B                    	mov     dl, 43						;coluna 0-79
   225 000001A4 C606[FB01]0A            	mov		byte[cor], verde_claro
   226 000001A9 E82402                  	call	cursor
   227 000001AC B023                    	mov     al, 35
   228 000001AE E83602                  	call	caracter
   229 000001B1 B22A                    	mov     dl, 42						;coluna 0-79
   230 000001B3 E81A02                  	call	cursor
   231 000001B6 B023                    	mov     al, 35
   232 000001B8 E82C02                  	call	caracter
   233 000001BB C3                      	ret
   234                                  
   235                                  desenha_select_hrs:
   236 000001BC B60F                    	mov     dh, 15						;linha 0-29
   237 000001BE B228                    	mov     dl, 40						;coluna 0-79
   238 000001C0 C606[FB01]0A            	mov		byte[cor], verde_claro
   239 000001C5 E80802                  	call	cursor
   240 000001C8 B023                    	mov     al, 35
   241 000001CA E81A02                  	call	caracter
   242 000001CD B227                    	mov     dl, 39						;coluna 0-79
   243 000001CF E8FE01                  	call	cursor
   244 000001D2 B023                    	mov     al, 35
   245 000001D4 E81002                  	call	caracter
   246 000001D7 C3                      	ret
   247                                  
   248                                  relogio:
   249 000001D8 50                      	push	ax
   250 000001D9 1E                      	push	ds
   251 000001DA B8[0000]                	mov     ax,data	
   252 000001DD 8ED8                    	mov     ds,ax	
   253                                      
   254 000001DF FE06[0202]                  inc	byte [tique]
   255 000001E3 803E[0202]12                cmp	byte[tique], 18	
   256 000001E8 7235                        jb		Fimrel
   257 000001EA C606[0202]00            	mov byte [tique], 0
   258 000001EF FE06[0302]              	inc byte [segundo]
   259 000001F3 803E[0302]3C            	cmp byte [segundo], 60
   260 000001F8 7225                    	jb   	Fimrel
   261 000001FA C606[0302]00            	mov byte [segundo], 0
   262 000001FF FE06[0402]              	inc byte [minuto]
   263 00000203 803E[0402]3C            	cmp byte [minuto], 60
   264 00000208 7215                    	jb   	Fimrel
   265 0000020A C606[0402]00            	mov byte [minuto], 0
   266 0000020F FE06[0502]              	inc byte [hora]
   267 00000213 803E[0502]18            	cmp byte [hora], 24
   268 00000218 7205                    	jb   	Fimrel
   269 0000021A C606[0502]00            	mov byte [hora], 0	
   270                                  Fimrel:
   271 0000021F B020                        mov		al,20h
   272 00000221 E620                    	out		20h,al
   273 00000223 1F                      	pop		ds
   274 00000224 58                      	pop		ax
   275 00000225 CF                      	iret
   276                                  	
   277                                  converte:
   278 00000226 50                          push 	ax
   279 00000227 1E                      	push    ds
   280 00000228 B8[0000]                	mov     ax, data
   281 0000022B 8ED8                    	mov     ds, ax
   282 0000022D 30E4                    	xor 	ah, ah
   283 0000022F B30A                    	MOV     BL, 10
   284 00000231 A0[0302]                	mov 	al, byte [segundo]
   285 00000234 F6F3                        DIV     BL
   286 00000236 0430                        ADD     AL, 30h                                                                                          
   287 00000238 A2[1102]                    MOV     byte [horario+6], AL
   288 0000023B 80C430                      ADD     AH, 30h
   289 0000023E 8826[1202]                  mov 	byte [horario+7], AH
   290                                      
   291 00000242 30E4                    	xor 	ah, ah
   292 00000244 A0[0402]                	mov 	al, byte [minuto]
   293 00000247 F6F3                        DIV     BL
   294 00000249 0430                        ADD     AL, 30h                                                                                          
   295 0000024B A2[0E02]                    MOV     byte [horario+3], AL
   296 0000024E 80C430                      ADD     AH, 30h
   297 00000251 8826[0F02]                  mov 	byte [horario+4], AH
   298                                  	
   299 00000255 30E4                    	xor 	ah, ah
   300 00000257 A0[0502]                	mov 	al, byte [hora]
   301 0000025A F6F3                        DIV     BL
   302 0000025C 0430                        ADD     AL, 30h                                                                                          
   303 0000025E A2[0B02]                    MOV     byte [horario], AL
   304 00000261 80C430                      ADD     AH, 30h
   305 00000264 8826[0C02]                  mov 	byte [horario+1], AH
   306                                  
   307                                  	; ESCREVE HORARIO (00:00:00)
   308 00000268 E81900                  	call escreve_horario
   309                                  
   310 0000026B 1F                      	pop     ds
   311 0000026C 58                      	pop     ax
   312 0000026D C3                      	ret  
   313                                  
   314                                  textos_fixos:
   315 0000026E E83800                  	call escreve_textohora
   316 00000271 E85A00                  	call escreve_alunoturma
   317 00000274 E87C00                  	call escreve_titulomenu
   318 00000277 E89E00                  	call escreve_textox
   319 0000027A E8C000                  	call escreve_textoseg
   320 0000027D E8E200                  	call escreve_textomin
   321 00000280 E80401                  	call escreve_textohrs
   322 00000283 C3                      	ret
   323                                  
   324                                  escreve_horario:
   325 00000284 C706[0300]0800          	mov word[num_chars], 8
   326 0000028A C606[0500]0E            	mov byte[linha_str], 14
   327 0000028F C606[0600]27            	mov byte[coluna_str], 39
   328 00000294 31DB                    	xor bx, bx
   329                                  	loop_cp_horario:
   330 00000296 8A87[0B02]              		mov al, byte[horario + bx]
   331 0000029A 8887[0700]              		mov byte[main_str + bx], al
   332 0000029E 43                      		inc bx
   333 0000029F 3B1E[0300]              		cmp bx, word[num_chars]
   334 000002A3 7CF1                    		jl loop_cp_horario
   335 000002A5 E80401                  	call escreve_str
   336 000002A8 C3                      	ret
   337                                  
   338                                  escreve_textohora:
   339 000002A9 C706[0300]0500          	mov word[num_chars], 5
   340 000002AF C606[0500]0E            	mov byte[linha_str], 14
   341 000002B4 C606[0600]21            	mov byte[coluna_str], 33
   342 000002B9 31DB                    	xor bx, bx
   343                                  	loop_cp_textohora:
   344 000002BB 8A87[0602]              		mov al, byte[texto_hora + bx]
   345 000002BF 8887[0700]              		mov byte[main_str + bx], al
   346 000002C3 43                      		inc bx
   347 000002C4 3B1E[0300]              		cmp bx, word[num_chars]
   348 000002C8 7CF1                    		jl loop_cp_textohora
   349 000002CA E8DF00                  	call escreve_str
   350 000002CD C3                      	ret
   351                                  
   352                                  escreve_alunoturma:
   353 000002CE C706[0300]3400          	mov word[num_chars], 52
   354 000002D4 C606[0500]02            	mov byte[linha_str], 2
   355 000002D9 C606[0600]0D            	mov byte[coluna_str], 13
   356 000002DE 31DB                    	xor bx, bx
   357                                  	loop_cp_alunoturma:
   358 000002E0 8A87[1602]              		mov al, byte[aluno_turma + bx]
   359 000002E4 8887[0700]              		mov byte[main_str + bx], al
   360 000002E8 43                      		inc bx
   361 000002E9 3B1E[0300]              		cmp bx, word[num_chars]
   362 000002ED 7CF1                    		jl loop_cp_alunoturma
   363 000002EF E8BA00                  	call escreve_str
   364 000002F2 C3                      	ret
   365                                  
   366                                  escreve_titulomenu:
   367 000002F3 C706[0300]0F00          	mov word[num_chars], 15
   368 000002F9 C606[0500]16            	mov byte[linha_str], 22
   369 000002FE C606[0600]20            	mov byte[coluna_str], 32
   370 00000303 31DB                    	xor bx, bx
   371                                  	loop_cp_titulomenu:
   372 00000305 8A87[4A02]              		mov al, byte[titulo_menu + bx]
   373 00000309 8887[0700]              		mov byte[main_str + bx], al
   374 0000030D 43                      		inc bx
   375 0000030E 3B1E[0300]              		cmp bx, word[num_chars]
   376 00000312 7CF1                    		jl loop_cp_titulomenu
   377 00000314 E89500                  	call escreve_str
   378 00000317 C3                      	ret
   379                                  
   380                                  escreve_textox:
   381 00000318 C706[0300]0700          	mov word[num_chars], 7
   382 0000031E C606[0500]18            	mov byte[linha_str], 24
   383 00000323 C606[0600]11            	mov byte[coluna_str], 17
   384 00000328 31DB                    	xor bx, bx
   385                                  	loop_cp_textox:
   386 0000032A 8A87[5902]              		mov al, byte[texto_x + bx]
   387 0000032E 8887[0700]              		mov byte[main_str + bx], al
   388 00000332 43                      		inc bx
   389 00000333 3B1E[0300]              		cmp bx, word[num_chars]
   390 00000337 7CF1                    		jl loop_cp_textox
   391 00000339 E87000                  	call escreve_str
   392 0000033C C3                      	ret
   393                                  
   394                                  escreve_textoseg:
   395 0000033D C706[0300]3500          	mov word[num_chars], 53
   396 00000343 C606[0500]19            	mov byte[linha_str], 25
   397 00000348 C606[0600]11            	mov byte[coluna_str], 17
   398 0000034D 31DB                    	xor bx, bx
   399                                  	loop_cp_textoseg:
   400 0000034F 8A87[6002]              		mov al, byte[texto_s + bx]
   401 00000353 8887[0700]              		mov byte[main_str + bx], al
   402 00000357 43                      		inc bx
   403 00000358 3B1E[0300]              		cmp bx, word[num_chars]
   404 0000035C 7CF1                    		jl loop_cp_textoseg
   405 0000035E E84B00                  	call escreve_str
   406 00000361 C3                      	ret
   407                                  
   408                                  escreve_textomin:
   409 00000362 C706[0300]3400          	mov word[num_chars], 52
   410 00000368 C606[0500]1A            	mov byte[linha_str], 26
   411 0000036D C606[0600]11            	mov byte[coluna_str], 17
   412 00000372 31DB                    	xor bx, bx
   413                                  	loop_cp_textomin:
   414 00000374 8A87[9502]              		mov al, byte[texto_m + bx]
   415 00000378 8887[0700]              		mov byte[main_str + bx], al
   416 0000037C 43                      		inc bx
   417 0000037D 3B1E[0300]              		cmp bx, word[num_chars]
   418 00000381 7CF1                    		jl loop_cp_textomin
   419 00000383 E82600                  	call escreve_str
   420 00000386 C3                      	ret
   421                                  
   422                                  escreve_textohrs:
   423 00000387 C706[0300]3200          	mov word[num_chars], 50
   424 0000038D C606[0500]1B            	mov byte[linha_str], 27
   425 00000392 C606[0600]11            	mov byte[coluna_str], 17
   426 00000397 31DB                    	xor bx, bx
   427                                  	loop_cp_textohrs:
   428 00000399 8A87[C902]              		mov al, byte[texto_h + bx]
   429 0000039D 8887[0700]              		mov byte[main_str + bx], al
   430 000003A1 43                      		inc bx
   431 000003A2 3B1E[0300]              		cmp bx, word[num_chars]
   432 000003A6 7CF1                    		jl loop_cp_textohrs
   433 000003A8 E80100                  	call escreve_str
   434 000003AB C3                      	ret
   435                                  
   436                                  escreve_str:
   437 000003AC 8B0E[0300]              	mov     	cx, word[num_chars]						;numero de caracteres
   438 000003B0 BB0000                  	mov     	bx, 0
   439 000003B3 8A36[0500]              	mov     	dh, byte[linha_str]						;linha 0-29
   440 000003B7 8A16[0600]              	mov     	dl, byte[coluna_str]					;coluna 0-79
   441 000003BB C606[FB01]0F            	mov			byte[cor], branco_intenso
   442                                  	loop_escreve_str:
   443 000003C0 E80D00                  		call	cursor
   444 000003C3 8A87[0700]              		mov     al, byte[bx+main_str]
   445 000003C7 E81D00                  		call	caracter
   446 000003CA 43                      		inc     bx			;proximo caracter
   447 000003CB FEC2                    		inc		dl			;avanca a coluna
   448 000003CD E2F1                    		loop    loop_escreve_str
   449 000003CF C3                      	ret
   450                                  
   451                                  ;***************************************************************************
   452                                  ;
   453                                  ;   funcao cursor
   454                                  ;
   455                                  ; dh = linha (0-29) e  dl=coluna  (0-79)
   456                                  cursor:
   457 000003D0 9C                      		pushf
   458 000003D1 50                      		push 		ax
   459 000003D2 53                      		push 		bx
   460 000003D3 51                      		push		cx
   461 000003D4 52                      		push		dx
   462 000003D5 56                      		push		si
   463 000003D6 57                      		push		di
   464 000003D7 55                      		push		bp
   465 000003D8 B402                    		mov     	ah,2
   466 000003DA B700                    		mov     	bh,0
   467 000003DC CD10                    		int     	10h
   468 000003DE 5D                      		pop		bp
   469 000003DF 5F                      		pop		di
   470 000003E0 5E                      		pop		si
   471 000003E1 5A                      		pop		dx
   472 000003E2 59                      		pop		cx
   473 000003E3 5B                      		pop		bx
   474 000003E4 58                      		pop		ax
   475 000003E5 9D                      		popf
   476 000003E6 C3                      		ret
   477                                  ;_____________________________________________________________________________
   478                                  ;
   479                                  ;   fun��o caracter escrito na posi��o do cursor
   480                                  ;
   481                                  ; al= caracter a ser escrito
   482                                  ; cor definida na variavel cor
   483                                  caracter:
   484 000003E7 9C                      		pushf
   485 000003E8 50                      		push 		ax
   486 000003E9 53                      		push 		bx
   487 000003EA 51                      		push		cx
   488 000003EB 52                      		push		dx
   489 000003EC 56                      		push		si
   490 000003ED 57                      		push		di
   491 000003EE 55                      		push		bp
   492 000003EF B409                        	mov     	ah,9
   493 000003F1 B700                        	mov     	bh,0
   494 000003F3 B90100                      	mov     	cx,1
   495 000003F6 8A1E[FB01]                 		mov     	bl,[cor]
   496 000003FA CD10                        	int     	10h
   497 000003FC 5D                      		pop		bp
   498 000003FD 5F                      		pop		di
   499 000003FE 5E                      		pop		si
   500 000003FF 5A                      		pop		dx
   501 00000400 59                      		pop		cx
   502 00000401 5B                      		pop		bx
   503 00000402 58                      		pop		ax
   504 00000403 9D                      		popf
   505 00000404 C3                      		ret
   506                                  ;_____________________________________________________________________________
   507                                  
   508                                  
   509                                  segment data
   510                                  	; CONFIGURAÇÃO PARA ALTERAR HORÁRIO
   511 00000000 00                      	select_smh		db		0		; 	0->nenhum, 1->segundos, 2->minutos, 3->horas
   512 00000001 00                      	n1				db		0
   513 00000002 00                      	n2				db		0
   514                                  	; CONFIGURAÇÃO PARA STRING GENERICA
   515 00000003 0000                    	num_chars		dw		0
   516 00000005 00                      	linha_str		db		0
   517 00000006 00                      	coluna_str		db		0
   518 00000007 00<rept>                	main_str		times 	500		db	0
   519                                  
   520                                  	; CONFIGURAÇÃO DE CORES
   521 000001FB 0F                      	cor		db		branco_intenso	;	I R G B COR
   522                                  	preto			equ		0		;	0 0 0 0 preto
   523                                  	azul			equ		1		;	0 0 0 1 azul
   524                                  	verde			equ		2		;	0 0 1 0 verde
   525                                  	cyan			equ		3		;	0 0 1 1 cyan
   526                                  	vermelho		equ		4		;	0 1 0 0 vermelho
   527                                  	magenta			equ		5		;	0 1 0 1 magenta
   528                                  	marrom			equ		6		;	0 1 1 0 marrom
   529                                  	branco			equ		7		;	0 1 1 1 branco
   530                                  	cinza			equ		8		;	1 0 0 0 cinza
   531                                  	azul_claro		equ		9		;	1 0 0 1 azul claro
   532                                  	verde_claro		equ		10		;	1 0 1 0 verde claro
   533                                  	cyan_claro		equ		11		;	1 0 1 1 cyan claro
   534                                  	rosa			equ		12		;	1 1 0 0 rosa
   535                                  	magenta_claro	equ		13		;	1 1 0 1 magenta claro
   536                                  	amarelo			equ		14		;	1 1 1 0 amarelo
   537                                  	branco_intenso	equ		15		;	1 1 1 1 branco intenso
   538                                  
   539                                  	eoi     		EQU 	20h
   540                                      intr	   		EQU 	08h
   541 000001FC 00                      	modo_anterior	db		0
   542 000001FD 00                      	char			db		0
   543 000001FE 0000                    	offset_dos		dw		0
   544 00000200 0000                    	cs_dos			dw		0
   545 00000202 00                      	tique			db  	0
   546 00000203 00                      	segundo			db  	0
   547 00000204 00                      	minuto 			db  	0
   548 00000205 00                      	hora 			db  	0
   549 00000206 486F72613A              	texto_hora    	db  	'Hora:'													; 5 caracteres
   550 0000020B 00003A00003A000020-     	horario			db  	0,0,':',0,0,':',0,0,' ', 13,'$'							; 8 caracteres
   551 00000214 0D24               
   552 00000216 544C5F323032322F32-     	aluno_turma    	db  	'TL_2022/2 - Usiel Ferreira Lopes Junior - Turma 06.1' 	; 52 caracteres
   553 0000021F 202D20557369656C20-
   554 00000228 466572726569726120-
   555 00000231 4C6F706573204A756E-
   556 0000023A 696F72202D20547572-
   557 00000243 6D612030362E31     
   558 0000024A 4D656E752064652074-     	titulo_menu    	db  	'Menu de teclas:'										; 15 caracteres
   559 00000253 65636C61733A       
   560 00000259 783A2073616972          	texto_x    		db  	'x: sair'												; 7 caracteres
   561 00000260 733A2070617261206F-     	texto_s    		db  	's: para o contador dos segundos e aguarda novo valor.'	; 53 caracteres
   562 00000269 20636F6E7461646F72-
   563 00000272 20646F732073656775-
   564 0000027B 6E646F732065206167-
   565 00000284 7561726461206E6F76-
   566 0000028D 6F2076616C6F722E   
   567 00000295 6D3A2070617261206F-     	texto_m    		db  	'm: para o contador dos minutos e aguarda novo valor.'	; 52 caracteres
   568 0000029E 20636F6E7461646F72-
   569 000002A7 20646F73206D696E75-
   570 000002B0 746F73206520616775-
   571 000002B9 61726461206E6F766F-
   572 000002C2 2076616C6F722E     
   573 000002C9 683A2070617261206F-     	texto_h    		db  	'h: para o contador das horas e aguarda novo valor.'	; 50 caracteres
   574 000002D2 20636F6E7461646F72-
   575 000002DB 2064617320686F7261-
   576 000002E4 732065206167756172-
   577 000002ED 6461206E6F766F2076-
   578 000002F6 616C6F722E         
   579                                  segment stack stack
   580 00000000 <res 00000100>              resb 256
   581                                  stacktop:
